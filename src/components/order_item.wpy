<template>
    <view class="order_item">
        <repeat for="{{shoporderList}}">
            <view class="list" wx:key="index">
              <navigator class="item_content" url="/pages/order_detail?shoporderid={{item.id}}">
                <view class="order_list_top">
                    <view class="left">
                        <view class="title">订单号
                            <text class="order_doc">{{item.orderNo}}</text>
                        </view>
                        <view class="title mt10">提交时间:
                            <text class="order_doc">{{item.createTime}}</text>
                        </view>
                        <view class="title mt10" wx:if="{{item.sendtype==SENDTYPE_OWNSEND||item.sendtype==SENDTYPE_THIRDSEND}}">收货地址:
                            <text class="order_doc">{{item.recieveAddress.detail}}</text>
                            <text class="order_doc" wx:if="{{item.status==ORDERSTATUS_UNSTART||item.status==ORDERSTATUS_PREORDER}}" 
                                    @tap.stop="changeRecieveAddress({{item.id}})">    修改 ></text>
                        </view>
                        <view class="title mt10" wx:if="{{item.sendtype==SENDTYPE_PICKUP}}">预约取货时间:
                            <text class="order_doc">{{item.pickupTime}}</text>
                        </view>
                        
                        <view class="title mt10" wx:if="{{item.sendtype==SENDTYPE_PICKUP}}" @tap.stop='showPickupAddress({{item.recieveAddress}})'>预约取货地址:
                            <text class="order_doc">{{item.recieveAddress.detail}}--地址导航</text>
                        </view>
                        <view class="title mt10" wx:if="{{item.sendtype==SENDTYPE_THIRDSEND&&item.status==ORDERSTATUS_DOING}}">快递单号:
                            <text class="order_doc">{{item.thirdsendNo}}</text>
                        </view>
                        <view class="title mt10" wx:if="{{item.sendtype==SENDTYPE_OWNSEND&&item.status==ORDERSTATUS_DOING}}">送货员:
                            <text class="order_doc">{{item.thirdsendNo}}</text>
                        </view>
                    </view>
                    <view>
                        <view class="order_state" wx:if="{{item.status==ORDERSTATUS_UNSTART}}">待确认</view>
                        <view class="order_state" wx:elif="{{item.status==ORDERSTATUS_OVERTIME}}">取货超时</view>
                    </view>
                </view>
                
                <view class="order_list_center">
                    <shopItemList :shopitemList.sync="item.orderGoodList"/>
                </view>
              </navigator>

                <view class="order_list_footer">
                    <view class="reveiveMoney c333">应付款:
                        <text class="num">{{item.totalPrice}}</text>
                    </view>
                    <view class="btn_group">
                        <view class="btn btn_del" @tap="deleteShopOrder({{item.id}})" wx:if="{{item.status!=ORDERSTATUS_DOING}}">删除订单</view>
                        <view class="btn btn_pay" @tap="confirmShopOrder({{item.id}})" wx:if="{{item.status==ORDERSTATUS_DOING}}">确认收货</view>
                    </view>
                </view>
            </view>
        </repeat>
    </view>
</template>
<script>
import wepy from 'wepy';
import ShopItemList from '../components/shop_item_list';
import {
  SENDTYPE_UNKNOW,
  SENDTYPE_PICKUP,
  SENDTYPE_OWNSEND,
  SENDTYPE_THIRDSEND,
  ORDERSTATUS_UNKNOW,
  ORDERSTATUS_PREORDER,
  ORDERSTATUS_UNSTART,
  ORDERSTATUS_DOING,
  ORDERSTATUS_FINISHED,
  ORDERSTATUS_OVERTIME
} from '../utils/constant';
import GlobalData from '../conf/globalData';
import shoporderapi from '../api/shoporderapi';
import tip from '../utils/tip';
export default class OrderItem extends wepy.component {
  props = {
    shoporderList: {
      type: Object,
      default: []
    }
  };
  data = {
    SENDTYPE_UNKNOW,
    SENDTYPE_PICKUP,
    SENDTYPE_OWNSEND,
    SENDTYPE_THIRDSEND,
    ORDERSTATUS_UNKNOW,
    ORDERSTATUS_PREORDER,
    ORDERSTATUS_UNSTART,
    ORDERSTATUS_DOING,
    ORDERSTATUS_FINISHED,
    ORDERSTATUS_OVERTIME
  };
  components = {
    shopItemList: ShopItemList
  };
  methods = {
    async deleteShopOrder(shoporderid) {
      shoporderapi.deleteUserShopOrder(GlobalData.getUserId(), shoporderid);
      let tmpArray = [];
      this.shoporderList.forEach(element => {
        if (element.id != shoporderid) {
          tmpArray.push(element);
        }
      });
      this.shoporderList = tmpArray;
      this.$emit('refreshShopOrderCount');
      this.$apply();
    },
    async confirmShopOrder(shoporderid) {
      let json = await shoporderapi.confirmUserShopOrderFinished(
        GlobalData.getUserId(),
        shoporderid
      );
      let response = json.data || {};
      if (response.code != 200) {
        tip.error('订单确认失败');
        return;
      }
      let confirmResponse = response.data;
      let tipContent = '订单确认成功';
      if (confirmResponse.genericScore > 0) {
        tipContent += `,恭喜获得${confirmResponse.genericScore}分用户积分`;
      }
      if (confirmResponse.voucherScore) {
        tipContent += `和${confirmResponse.voucherScore}分专用积分`;
      }
      tip.alert(tipContent);
      let tmpArray = [];
      this.shoporderList.forEach(element => {
        if (element.id != shoporderid) {
          tmpArray.push(element);
        }
      });
      this.shoporderList = tmpArray;
      this.$emit('refreshShopOrderCount');
      this.$apply();
    },
    showPickupAddress(recieveAddress) {
      let coordinate = recieveAddress.coordinate;
      wepy.openLocation({
        latitude: coordinate.latitude,
        longitude: coordinate.longitude,
        name: '取货地点',
        address: recieveAddress.detail
      });
    },
    changeRecieveAddress(shoporderid) {
      wepy.navigateTo({
        url: '/pages/address?type=shoporder&shoporderid=' + shoporderid
      });
    }
  };
}
</script>
<style lang="less">
.order_item {
  padding: 10rpx 0rpx;
  background: #f7f7f7;
  margin-bottom: 30rpx;
  .title {
    font-size: 26rpx;
    color: #333;
  }
  .order_doc {
    font-size: 26rpx;
    color: #808080;
  }
  .mt10 {
    margin-top: 10rpx;
  }
  .order_state {
    color: #ff4856;
    font-size: 32rpx;
  }
  .order_list_top {
    display: flex;
    justify-content: space-between;
    align-items: flex-end;
  }
  .order_list_footer {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding-top: 20rpx;
    .num {
      color: #ff4856;
    }
  }
  .order_list_top {
    padding-bottom: 26rpx;
    border-bottom: 1px solid #efefef;
  }
  .list {
    background: #fff;
    padding: 30rpx;
    margin-top: 15rpx;
  }
  .btn_group {
    display: flex;
    align-items: center;
    .btn {
      font-size: 30rpx;
      padding: 22rpx 35rpx;
      text-align: center;
      margin: 0 auto;
      width: 100%;
      -moz-border-radius: 15rpx;
      /* Firefox */
      -webkit-border-radius: 15rpx;
      /* Safari 和 Chrome */
      border-radius: 15rpx;
      /* Opera 10.5+, 以及使用了IE-CSS3的IE浏览器 */
    }
    .btn_del {
      color: #333;
      border: 1px solid #ccc;
    }
    .btn_pay {
      background: #ff4856;
      color: #fff;
      margin-left: 20rpx;
    }
  }
}
</style>
