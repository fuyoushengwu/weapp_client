<template>
  <view>
    <view class="address">
        <repeat for="{{addressList}}" key="index" index="index" item="item">
            <view class="list_box">
                <swipeDelete :swipeData="item" @delItem.user="deleteRecieveAddress">
                    <view class="address_list" @tap="selectRecieveAddress({{item}})">
                        <view class="title">
                            <view class="user_info">
                                <text class="name">{{item.reciever}}</text>
                                <text class="phone">{{item.phone}}</text>
                            </view>
                            <view class="active_address">
                                <text class="default" wx:if="{{item.def}}">[默认]</text>
                                {{item.province?item.province.name:''}}  {{item.city?item.city.name:''}}  {{item.county?item.county.name:''}}  {{item.detail}}
                            </view>
                        </view>
                        <view class="arrow" @tap.stop="editRecieveAddress({{item.id}})"><i class="iconfont icon-edit"></i></view>
                    </view>
                </swipeDelete>
            </view>
        </repeat>
    </view>

    <view class="add_wrap">
        <view class="button type_red" @tap="addRecieveAddress">新增地址</view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import SwipeDelete from './common/swipe-delete';
import GlobalData from '../conf/globalData';
import ShopOrderAPI from '../api/ShopOrderAPI';
import UserAPI from '../api/UserAPI';
import tip from '../utils/tip';
export default class AddressList extends wepy.component {
  props = {
    addressList: {
      default: [],
      type: Object
    }
  };

  components = {
    swipeDelete: SwipeDelete
  };

  data = {
    type: ''
  };

  setShowType(type) {
    this.type = type;
  }

  setShopOrderId(shopOrderId) {
    this.shopOrderId = shopOrderId;
  }

  setRecieveAddressList(list) {
    if (list == undefined) {
      return;
    }
    this.addressList = list;
    this.$apply();
  }

  delUserAddress(addressId) {
    let that = this;
    UserAPI
      .deprecateRecieveAddress(GlobalData.getUsername(), addressId)
      .then(res => {
        let response = res.data || {};
        if (response.code != 200) {
          tip.error('删除用户收货地址失败');
          return;
        }
        that.$emit('currentPage', 0);
        that.$emit('deleteRecieveAddress', addressId);
      });
  }

  methods = {
    addRecieveAddress() {
      // 0 列表 1新增 2编辑
      this.$emit('currentPage', 1);
    },
    editRecieveAddress(addressId) {
      // 0 列表 1新增 2编辑
      this.$emit('currentPage', 2, addressId);
    },
    deleteRecieveAddress(recieveAddress) {
      this.delUserAddress(recieveAddress.id);
    },
    selectRecieveAddress(recieveAddress) {
      if (this.type == 'previeworder') {
        GlobalData.setSelectedRecieveAddress(recieveAddress);
        wepy.navigateBack({
          delta: 1
        });
      } else if (this.type == 'shoporder') {
        ShopOrderAPI
          .updateUserShopOrderRecieveAddress(
            GlobalData.getUsername(),
            this.shopOrderId,
            recieveAddress.id
          )
          .then(res => {
            let response = res.data || {};
            if (response.code == 200) {
              GlobalData.setCurShopOrderId(this.shopOrderId);
              GlobalData.setSelectedRecieveAddress(recieveAddress);
              wepy.navigateBack({
                delta: 1
              });
            } else {
              tip.error('修改订单收货地址失败');
            }
          });
      }
    }
  };
}
</script>
<style lang="less">
.list_box {
  height: 150rpx;
}

.address {
  .list_box:last-child {
    border-bottom: 1px solid #efefef;
  }
  .address_list {
    display: flex;
    justify-content: space-between;
    height: 150rpx;
    align-items: center;
    padding: 0rpx 0px 0px 35rpx;
    border-top: 1px solid #efefef;
    .title {
      color: #000;
    }
    .arrow {
      height: 150rpx;
      line-height: 150rpx;
      width: 150rpx;
      text-align: center;
      color: #9a9a9a;
    }
    .user_info {
      color: #1a1a1a;
    }
    .active_address {
      margin-top: 20rpx;
    }
    .defult {
      color: #ea4a3a;
    }
  }
}
.add_wrap {
  display: block;
  width: 95%;
  left: 0;
  right: 0;
  position: absolute;
  bottom: 20rpx;
  margin: 0 auto;
}
</style>
