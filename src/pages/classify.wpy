<template>
  <view>
    <view class="top_search">
      <view class="search_read_only">
        <navigator class="search_content">
          <i class="iconfont icon-search"></i>
          <view class="search_input">搜索商品</view>
        </navigator>
      </view>
    </view>

    <view class="classify" style="height:{{windowHeight-50}}px">
        <scroll-view class="classify_catetory" scroll-y scroll-with-animation="true" style="height:{{windowHeight-50}}px">
          <view class="name {{item.active? 'active':''}}" wx:for="{{topClassifyList}}" wx:key="item" @tap="changeTopClassify({{item.id}})">
              {{item.name}}
          </view>
        </scroll-view>
        <scroll-view class="classify_detail" scroll-y scroll-with-animation="true" style="height:{{windowHeight-50}}px">
          <view class="children">
            <navigator hover-class="none" class="children_item" wx:for="{{subClassifyList}}" wx:for-item="item" wx:key="id" 
                url="/pages/search?classifyid={{item.id}}&title={{item.name}}">
              <image class="child_image" src="{{item.coverImg}}"/>
              <view class="child_name">{{item.name}}</view>
            </navigator>
          </view>
        </scroll-view>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import { SYSTEM_INFO } from '../utils/constant';
import classifyapi from '../api/classifyapi';
import GlobalData from '../conf/globalData';
export default class Classify extends wepy.page {
  config = {
    navigationBarTitleText: '分类'
  };

  data = {
    // 正在使用中的顶层条目
    topClassifyId: '',
    // 系统窗口高度
    windowHeight: 0,
    // 顶层条目
    topClassifyList: [],
    // 顶层条目是否已经初始化
    topClassify_inited: false,
    // 子条目
    subClassifyList: [],
    // 子条目是否已经初始化
    subClassify_inited: false
  };
  
  onLoad() {
    let systemInfo = wx.getStorageSync(SYSTEM_INFO);
    this.windowHeight = systemInfo.windowHeight;
    this.topClassifyId = GlobalData.getTopClassifyId();
    this.initTopClassify();
    this.initSubClassify();
  }

  /**
   * 初始化顶层条目
   */
  initTopClassify() {
    if (this.topClassify_inited) {
      return;
    }
    this.topClassify_inited = true;
    this.getTopClassify();
  }
  /**
   *  获取最顶层条目
   */
  getTopClassify() {
    let that = this;
    classifyapi.getTopClassifyList().then(res => {
      let response = res.data || {};
      if (response.code == 200) {
        that.topClassifyList = response.data;
        that.$apply();
      }
    });
  }

  /**
   * 初始化子条目
   */
  initSubClassify() {
    if (!this.topClassifyId) {
      return;
    }
    if (this.subClassify_inited) {
      return;
    }
    this.subClassify_inited = true;
    this.getSubClassify();
  }

  /**
   * 获取子条目
   */
  getSubClassify() {
    if (!this.topClassifyId) {
      return;
    }
    let that = this;
    classifyapi.getSubClassifyList(this.topClassifyId).then(res => {
      let response = res.data || {};
      if (response.code == 200) {
        that.subClassifyList = response.data;
        that.$apply();
      }
    });
  }

  methods = {
    changeTopClassify(id) {
      this.topClassifyId = id;
      GlobalData.setTopClassifyId(id);
      this.getSubClassify();
      this.topClassifyList.forEach(classify => {
        if (classify.id == id) {
          classify.active = true;
        } else {
          classify.active = false;
        }
      });
    }
  };

  watch = {
    topClassifyList() {
      if (this.topClassifyList && this.topClassifyList.length > 0) {
        if (!this.topClassifyId) {
          this.topClassifyId = this.topClassifyList[0].id;
          GlobalData.setTopClassifyId(this.topClassifyId);
        }

        this.topClassifyList.forEach(classify => {
          if (this.topClassifyId == classify.id) {
            classify.active = true;
          } else {
            classify.active = false;
          }
        });
        this.initSubClassify();
      }
    }
  };
}
</script>

<style lang="less">
.search_read_only .search_content {
  width: 100%;
}
.classify {
  display: flex;
  position: relative;
  .classify_catetory {
    width: 200rpx;
    position: relative;
    z-index: 1;
    .name {
      text-align: center;
      height: 100rpx;
      line-height: 100rpx;
      font-size: 28rpx;
      color: #666;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
    }
    .active {
      border-left: 6rpx solid #ff6a3c;
      background: #fff;
      color: #ff6a3c;
    }
  }
  .classify_detail {
    position: relative;
    z-index: 999;
    // margin-left: -15rpx;
    background: #fff;
    padding: 15px 10px 10px 30px;
    .classify_item {
    }
    .title {
      font-size: 30rpx;
      color: #333;
      margin-left: 25rpx;
    }
    .children {
      display: flex;
      flex-wrap: wrap;
      margin: 20rpx 0rpx;
    }
    .child_image {
      width: 60px;
      height: 60px;
    }
    .child_name {
      font-size: 26rpx;
      color: #666;
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
      width: 170rpx;
    }
    .children_item {
      height: 200rpx;
      width: 170rpx;
      text-align: center;
    }
  }
}
</style>
