<template>
  <view>
    <view class="swiper-tab-pd">
        <tab @currentTab.user="updateCurrentTab" :tabList.sync="tabList" :currentTab.sync="currentTab"/>
    </view>
      <orderItem :shoporderList.sync="shoporderList"></orderItem>
      <!--加载更多时动画-->
      <bottomLoadMore :show.sync="gettingmore"></bottomLoadMore>
      <!--暂无数据显示-->
      <placeholder :show.sync="is_empty" message="暂无发现数据"></placeholder>
  </view>
</template>
<script>
import wepy from 'wepy';
import Tab from '../components/tab';
import OrderItem from '../components/order_item';
import BottomLoadMore from '../components/common/bottomLoadMore';
import Placeholder from '../components/common/placeholder';
import {
  SENDTYPE_UNKNOW,
  SENDTYPE_PICKUP,
  SENDTYPE_OWNSEND,
  SENDTYPE_THIRDSEND,
  ORDERSTATUS_PREORDER,
  ORDERSTATUS_UNSTART,
  ORDERSTATUS_DOING,
  ORDERSTATUS_FINISHED
} from '../utils/constant';
import GlobalData from '../conf/globalData';
import shoporderapi from '../api/shoporderapi';
import tip from '../utils/tip';
export default class Order extends wepy.page {
  config = {
    navigationBarTitleText: '我的订单',
    enablePullDownRefresh: true
  };

  data = {
    tabList: [
      { name: '待收货', dotNum: 0 },
      { name: '待取货', dotNum: 0 },
      { name: '预订中', dotNum: 0 },
      { name: '已完成', dotNum: 0 }
    ],
    currentTab: -1,
    // 订单的配送方式:  0:到店自取(pickup); 1:送货上门(ownsend); 2:快递(thirdsend);
    sendtypeList: [],
    // 订单状态:0:预订;1:未开始;2:进行中;3:已完成;4:订单超时
    orderstatusList: [],

    shoporderList: [],
    totalpage: 1,
    currentpage: 1,
    pagesize: 5,
    is_empty: true,
    gettingmore: false,
    // 防止重复加载
    inRequesting: false
  };

  components = {
    tab: Tab,
    orderItem: OrderItem,
    bottomLoadMore: BottomLoadMore,
    placeholder: Placeholder
  };

  onLoad(opts) {
    if (opts.orderstatus == ORDERSTATUS_PREORDER) {
      this.currentTab = 2;
      return;
    }
    switch (opts.sendtype) {
      case SENDTYPE_PICKUP:
        this.currentTab = 1;
        break;
      case SENDTYPE_OWNSEND:
      case SENDTYPE_THIRDSEND:
      default:
        this.currentTab = 0;
        break;
    }
  }

  onShow() {
    // 处理订单还未处理前修改地址的逻辑
    let recieveAddress = GlobalData.getSelectedRecieveAddress();
    let shoporderid = GlobalData.getCurShopOrderId();
    if (shoporderid && recieveAddress) {
      GlobalData.clearSelectedRecieveAddress();
      GlobalData.clearCurShopOrderId();
      this.shoporderList.forEach(shoporder => {
        if (shoporder.id == shoporderid) {
          shoporder.recieveAddress = recieveAddress;
        }
      });
    }
  }

  onPullDownRefresh() {
    this.getUserShopOrder(false, true, false);
  }

  onReachBottom() {
    this.getUserShopOrder(false, false, true);
  }

  getUserShopOrder(init, pulldown, more) {
    if (this.inRequesting) {
      return;
    }
    if (more) {
      if (this.currentpage >= this.totalpage) {
        tip.success('已经到底啦');
        return;
      } else {
        this.gettingmore = true;
        this.currentpage++;
      }
    }

    if (init || pulldown) {
      this.currentpage = 1;
      this.totalpage = 1;
    }
    wx.showNavigationBarLoading();
    this.inRequesting = true;
    let that = this;
    shoporderapi
      .getUserShopOrderList(
        GlobalData.getUserId(),
        this.orderstatusList,
        this.sendtypeList,
        this.currentpage,
        this.pagesize
      )
      .then(res => {
        that.gettingmore = false;
        that.inRequesting = false;
        wx.hideNavigationBarLoading();
        if (pulldown) {
          wx.stopPullDownRefresh();
        }
        let response = res.data || {};
        if (response.code != 200) {
          return;
        }
        let getUserShopOrderListResponse = response.data;
        that.currentpage = getUserShopOrderListResponse.currentpage;
        that.totalpage = getUserShopOrderListResponse.totalpage;
        if (init || pulldown) {
          that.shoporderList = getUserShopOrderListResponse.dataList;
        } else {
          that.shoporderList = [
            ...that.shoporderList,
            ...getUserShopOrderListResponse.dataList
          ];
        }

        if (that.shoporderList.length != 0) {
          that.is_empty = false;
        } else {
          that.is_empty = true;
        }

        that.$apply();
      });
    this.loadShopOrderCount();
  }

  loadShopOrderCount() {
    let that = this;
    shoporderapi
      .getUserShopOrderStatusCount(GlobalData.getUserId())
      .then(res => {
        let response = res.data || {};
        if (response.code != 200) {
          return;
        }
        // 待收货
        that.tobeReceiveCount = response.data.tobeReceiveCount;
        // 待取货
        that.tobePickUpCount = response.data.tobePickUpCount;
        // 预订中
        that.inOrderingCount = response.data.inOrderingCount;
        // 已完成
        that.finishedCount = response.data.finishedCount;
        that.tabList = [
          { name: '待收货', dotNum: that.tobeReceiveCount },
          { name: '待取货', dotNum: that.tobePickUpCount },
          { name: '预订中', dotNum: that.inOrderingCount },
          { name: '已完成', dotNum: that.finishedCount }
        ];
        that.$apply();
      });
  }

  methods = {
    updateCurrentTab(cur) {
      if (cur != this.currentTab) {
        this.currentTab = cur;
      }
    }
  };

  events = {
    refreshShopOrderCount() {
      this.loadShopOrderCount();
    }
  };

  watch = {
    currentTab(newValue) {
      switch (newValue) {
        case 0:
          this.sendtypeList = [SENDTYPE_OWNSEND, SENDTYPE_THIRDSEND];
          this.orderstatusList = [ORDERSTATUS_UNSTART, ORDERSTATUS_DOING];
          break;
        case 1:
          this.sendtypeList = [SENDTYPE_PICKUP];
          this.orderstatusList = [ORDERSTATUS_UNSTART, ORDERSTATUS_DOING];
          break;
        case 2:
          this.sendtypeList = [
            SENDTYPE_UNKNOW,
            SENDTYPE_PICKUP,
            SENDTYPE_OWNSEND,
            SENDTYPE_THIRDSEND
          ];
          this.orderstatusList = [ORDERSTATUS_PREORDER];
          break;
        case 3:
          this.sendtypeList = [
            SENDTYPE_UNKNOW,
            SENDTYPE_PICKUP,
            SENDTYPE_OWNSEND,
            SENDTYPE_THIRDSEND
          ];
          this.orderstatusList = [ORDERSTATUS_FINISHED];
          break;
        default:
          this.sendtypeList = [SENDTYPE_OWNSEND, SENDTYPE_THIRDSEND];
          this.orderstatusList = [ORDERSTATUS_UNSTART, ORDERSTATUS_DOING];
          break;
      }
      this.getUserShopOrder(true, false, false);
    }
  };
}
</script>
<style lang="less">
.swiper-tab-pd {
  padding: 0 30rpx;
  background: #fff;
}

.swiper-tab-order.active {
  color: #ff4856;
  border-bottom: 5rpx solid #ff4856;
}
</style>
